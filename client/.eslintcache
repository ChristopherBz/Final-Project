[{"C:\\Users\\Christopher.Balanzat\\OneDrive\\Self D\\professional\\Coding Bootcamp\\Final-Project\\00-final-app\\client\\src\\index.js":"1","C:\\Users\\Christopher.Balanzat\\OneDrive\\Self D\\professional\\Coding Bootcamp\\Final-Project\\00-final-app\\client\\src\\App.js":"2","C:\\Users\\Christopher.Balanzat\\OneDrive\\Self D\\professional\\Coding Bootcamp\\Final-Project\\00-final-app\\client\\src\\pages\\NotFound.js":"3","C:\\Users\\Christopher.Balanzat\\OneDrive\\Self D\\professional\\Coding Bootcamp\\Final-Project\\00-final-app\\client\\src\\pages\\Home.js":"4","C:\\Users\\Christopher.Balanzat\\OneDrive\\Self D\\professional\\Coding Bootcamp\\Final-Project\\00-final-app\\client\\src\\pages\\Login.js":"5","C:\\Users\\Christopher.Balanzat\\OneDrive\\Self D\\professional\\Coding Bootcamp\\Final-Project\\00-final-app\\client\\src\\pages\\SignUp.js":"6","C:\\Users\\Christopher.Balanzat\\OneDrive\\Self D\\professional\\Coding Bootcamp\\Final-Project\\00-final-app\\client\\src\\pages\\Matchup.js":"7","C:\\Users\\Christopher.Balanzat\\OneDrive\\Self D\\professional\\Coding Bootcamp\\Final-Project\\00-final-app\\client\\src\\pages\\Vote.js":"8","C:\\Users\\Christopher.Balanzat\\OneDrive\\Self D\\professional\\Coding Bootcamp\\Final-Project\\00-final-app\\client\\src\\utils\\auth.js":"9","C:\\Users\\Christopher.Balanzat\\OneDrive\\Self D\\professional\\Coding Bootcamp\\Final-Project\\00-final-app\\client\\src\\utils\\mutations.js":"10","C:\\Users\\Christopher.Balanzat\\OneDrive\\Self D\\professional\\Coding Bootcamp\\Final-Project\\00-final-app\\client\\src\\utils\\queries.js":"11","C:\\Users\\Christopher.Balanzat\\OneDrive\\Self D\\professional\\Coding Bootcamp\\Final-Project\\00-final-app\\client\\src\\components\\MatchList\\index.js":"12"},{"size":219,"mtime":1636009197630,"results":"13","hashOfConfig":"14"},{"size":1793,"mtime":1636009197576,"results":"15","hashOfConfig":"14"},{"size":391,"mtime":1636009197766,"results":"16","hashOfConfig":"14"},{"size":1550,"mtime":1636009626703,"results":"17","hashOfConfig":"14"},{"size":3871,"mtime":1636009197717,"results":"18","hashOfConfig":"14"},{"size":3399,"mtime":1636009197790,"results":"19","hashOfConfig":"14"},{"size":2395,"mtime":1636009554980,"results":"20","hashOfConfig":"14"},{"size":2803,"mtime":1636009690350,"results":"21","hashOfConfig":"14"},{"size":765,"mtime":1636009197841,"results":"22","hashOfConfig":"14"},{"size":1119,"mtime":1636009197867,"results":"23","hashOfConfig":"14"},{"size":964,"mtime":1636009197892,"results":"24","hashOfConfig":"14"},{"size":3719,"mtime":1636009197662,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1flp55w",{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"55"},"C:\\Users\\Christopher.Balanzat\\OneDrive\\Self D\\professional\\Coding Bootcamp\\Final-Project\\00-final-app\\client\\src\\index.js",[],"C:\\Users\\Christopher.Balanzat\\OneDrive\\Self D\\professional\\Coding Bootcamp\\Final-Project\\00-final-app\\client\\src\\App.js",[],"C:\\Users\\Christopher.Balanzat\\OneDrive\\Self D\\professional\\Coding Bootcamp\\Final-Project\\00-final-app\\client\\src\\pages\\NotFound.js",[],"C:\\Users\\Christopher.Balanzat\\OneDrive\\Self D\\professional\\Coding Bootcamp\\Final-Project\\00-final-app\\client\\src\\pages\\Home.js",["56","57","58","59","60"],"import { useParams, Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_MATCHUPS,QUERY_USER_VOTES,QUERY_ME } from '../utils/queries';\nimport Auth from '../utils/auth';\nimport MatchList from '../components/MatchList';\n\nconst Home = () => {\n\n  //let { userid } = useParams();\n\n  // if (!Auth.loggedIn()) {\n  //   history.push('/');\n  // }\n\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };  \n\n  let { userid } = Auth.getUser().data._id;\n\n  const QueryMultiple = () => {\n     const res3 =  useQuery(QUERY_ME, {\n      fetchPolicy: \"no-cache\"\n    });     \n    return [res3];\n  }\n  \n  const [\n      { loading: loading3, data: data3 }\n  ] = QueryMultiple()\n\n  const profile = data3?.me|| {};\n\n  return (\n    <div className=\"card bg-white card-rounded w-50\">\n      <div className=\"card-header bg-dark text-center\">\n        <h1>Welcome to the NRL 2022 Grand final tipping tracker!</h1>\n        <h4>Place your bet on who will be in the final head to head of the season</h4>\n          <button className=\"btn btn-lg btn-danger\" onClick={logout}>Log Out</button>\n      </div>\n        \n\n        <MatchList\n            userid={profile._id}\n            />          \n\n      \n     \n      <div className=\"card-footer text-center m-3\">\n        <h2>Can't find your ideal bet? Create a new competition here</h2>\n        <Link to={{ pathname: `/matchup/` }}>\n          <button className=\"btn btn-lg btn-danger\">Create Game!</button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","C:\\Users\\Christopher.Balanzat\\OneDrive\\Self D\\professional\\Coding Bootcamp\\Final-Project\\00-final-app\\client\\src\\pages\\Login.js",["61","62","63"],"import { Link,useHistory } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../utils/mutations';\n\nimport Auth from '../utils/auth';\n\nconst Login = (props) => {\n  const [formState, setFormState] = useState({ name: '', password: '' });\n  const [login, { error, data }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      name: '',\n      password: '',\n    });\n  };\n\n    return (\n    \n    <div className=\"card bg-white card-rounded w-50\">\n      <div className=\"card-header bg-dark text-center\">\n        <h1>Welcome to the NRL 2022 Grand final tipping tracker!</h1>\n      </div>\n      <div className=\"card-footer text-center m-3\">\n        <form onSubmit={handleFormSubmit}>\n          <h2>Login</h2>\n          <p>\n            <input name=\"name\" type=\"text\" placeholder=\"Name\" value={formState.name} onChange={handleChange}/>\n          </p>\n          <p>\n            <input  name=\"password\" type=\"password\" placeholder=\"Password\" value={formState.password} onChange={handleChange} />\n          </p>        \n            <button type=\"submit\" className=\"btn btn-lg btn-danger\">Login</button>Â \n            <Link to=\"/SignUp\">\n              <button className=\"btn btn-lg btn-danger\">Sign Up</button>\n            </Link>            \n        </form>\n      </div>\n      {error && <div>Something went wrong...</div>} \n    </div>\n    \n  );\n};\n\n// const Login = () => {\n\n//   const [formData, setFormData] = useState({\n//     _id: '',\n//     name: '',\n//     password: '',\n//   });\n  \n//   const [UseQuery, { data, error }] = useLazyQuery(QUERY_LOGIN, {\n//     variables: {  ...formData },\n//   });\n  \n//   let history = useHistory();\n\n//   const handleInputChange = (event) => {\n//     const { name, value } = event.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const handleFormSubmit = async (event) => {\n//     event.preventDefault();\n  \n//     try {\n\n//       UseQuery();\n      \n//       if (data && data.login && data.login.length > 0){\n//         console.log(data)\n//         history.push(`/home/${data.login[0]._id}`);\n//       }\n      \n\n//     } catch (err) {\n//       console.error(err);\n//     }\n\n//   //  setFormData({\n//   //   _id: '',\n//   //    name: '',\n//   //    password: '',\n//   //  });\n//   };\n\n//   return (\n    \n//     <div className=\"card bg-white card-rounded w-50\">\n//       <div className=\"card-header bg-dark text-center\">\n//         <h1>Welcome to the NRL 2022 Grand final tipping tracker!</h1>\n//       </div>\n//       <div className=\"card-footer text-center m-3\">\n//         <form onSubmit={handleFormSubmit}>\n//           <h2>Login</h2>\n//           <p>\n//             <input name=\"name\" type=\"text\" placeholder=\"Name\"  onChange={handleInputChange}/>\n//           </p>\n//           <p>\n//             <input  name=\"password\" type=\"text\" placeholder=\"Password\"  onChange={handleInputChange} />\n//           </p>        \n//             <button type=\"submit\" className=\"btn btn-lg btn-danger\">Login</button>Â \n//             <Link to=\"/SignUp\">\n//               <button className=\"btn btn-lg btn-danger\">Sign Up</button>\n//             </Link>            \n//         </form>\n//       </div>\n//       {error && <div>Something went wrong...</div>} \n//     </div>\n    \n//   );\n// };\n\nexport default Login;\n","C:\\Users\\Christopher.Balanzat\\OneDrive\\Self D\\professional\\Coding Bootcamp\\Final-Project\\00-final-app\\client\\src\\pages\\SignUp.js",["64","65"],"import { useHistory } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { CREATE_USER } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nconst SignUp = () => {\n  const [formState, setFormState] = useState({\n    name: '',\n    password: '',\n  });\n  const [createUser, { error, data }] = useMutation(CREATE_USER);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n\n    try {\n      const { data } = await createUser({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.createUser.token);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n\n    return (\n    \n    <div className=\"card bg-white card-rounded w-50\">\n      <div className=\"card-header bg-dark text-center\">\n        <h1>Welcome to the NRL 2022 Grand final tipping tracker!</h1>\n      </div>\n      <div className=\"card-footer text-center m-3\">\n        <form onSubmit={handleFormSubmit}>\n          <h2>Sign Up</h2>\n          <p>\n            <input name=\"name\" type=\"text\" placeholder=\"Name\" value={formState.name} onChange={handleChange}/>\n          </p>\n          <p>\n            <input  name=\"password\" type=\"text\" placeholder=\"Password\" value={formState.password} onChange={handleChange}/>\n          </p>        \n            <button type=\"submit\" className=\"btn btn-lg btn-danger\">Join</button>Â \n        </form>\n        \n      </div>\n      {error && <div>Something went wrong...</div>}\n    </div>\n    \n  );\n};\n\n// const SignUp = () => {\n\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     password: '',\n//   });\n  \n//   const [createUser, { error }] = useMutation(CREATE_USER);\n\n//   const handleInputChange = (event) => {\n//     const { name, value } = event.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   let history = useHistory();\n      \n//   const handleFormSubmit = async (event) => {\n//     event.preventDefault();\n\n//     try {\n      \n//       const { data } = await createUser({\n//         variables: { ...formData },\n//       });\n\n//       history.push(`/home/${data.createUser._id}`);\n//     } catch (err) {\n//       console.error(err);\n//     }\n\n//     setFormData({\n//       name: '',\n//       password: '',\n//     });\n//   };\n\n//   return (\n    \n//     <div className=\"card bg-white card-rounded w-50\">\n//       <div className=\"card-header bg-dark text-center\">\n//         <h1>Welcome to the NRL 2022 Grand final tipping tracker!</h1>\n//       </div>\n//       <div className=\"card-footer text-center m-3\">\n//         <form onSubmit={handleFormSubmit}>\n//           <h2>Sign Up</h2>\n//           <p>\n//             <input name=\"name\" type=\"text\" placeholder=\"Name\"  onChange={handleInputChange}/>\n//           </p>\n//           <p>\n//             <input  name=\"password\" type=\"text\" placeholder=\"Password\"  onChange={handleInputChange}/>\n//           </p>        \n//             <button type=\"submit\" className=\"btn btn-lg btn-danger\">Join</button>Â \n//         </form>\n        \n//       </div>\n//       {error && <div>Something went wrong...</div>}\n//     </div>\n    \n//   );\n// };\n\nexport default SignUp;\n","C:\\Users\\Christopher.Balanzat\\OneDrive\\Self D\\professional\\Coding Bootcamp\\Final-Project\\00-final-app\\client\\src\\pages\\Matchup.js",["66"],"import React, { useState } from 'react';\nimport { useHistory,useParams } from 'react-router-dom';\nimport { useMutation, useQuery } from '@apollo/client';\nimport { QUERY_TEAM } from '../utils/queries';\nimport { CREATE_MATCHUP } from '../utils/mutations';\n\nconst Matchup = () => {\n  \n  //let { userid } = Auth.getUser().data._id;\n\n  const { loading, data } = useQuery(QUERY_TEAM);\n\n  const teamList = data?.team || [];\n\n  const [formData, setFormData] = useState({\n    team1: 'Rabbitohs',\n    team2: 'Rabbitohs',\n  });\n  let history = useHistory();\n\n  const [createMatchup, { error }] = useMutation(CREATE_MATCHUP);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await createMatchup({\n        variables: { ...formData },\n      });\n\n      history.push(`/matchup/${data.createMatchup._id}`);\n    } catch (err) {\n      console.error(err);\n    }\n\n    setFormData({\n      team1: 'Rabbitohs',\n      team2: 'Rabbitohs',\n    });\n  };\n\n  return (\n    <div className=\"card bg-white card-rounded w-25\">\n      <div className=\"card-header bg-dark text-center\">\n        <h1>Create your 2022 grand final match</h1>\n      </div>\n      <div className=\"card-body m-5\">\n        {loading ? (\n          <div>Loading...</div>\n        ) : (\n          <form onSubmit={handleFormSubmit}>\n            <label>Team 1: </label>\n            <select name=\"team1\" onChange={handleInputChange}>\n              {teamList.map((team) => {\n                return (\n                  <option key={team._id} value={team.name}>\n                    {team.name}\n                  </option>\n                );\n              })}\n            </select>\n            <label>Team 2: </label>\n            <select name=\"team2\" onChange={handleInputChange}>\n              {teamList.map((team) => {\n                return (\n                  <option key={team._id} value={team.name}>\n                    {team.name}\n                  </option>\n                );\n              })}\n            </select>\n            <button className=\"btn btn-danger\" type=\"submit\">\n              Create Game\n            </button>\n          </form>\n        )}\n      </div>\n      {error && <div>Something went wrong...</div>}\n    </div>\n  );\n};\n\nexport default Matchup;\n","C:\\Users\\Christopher.Balanzat\\OneDrive\\Self D\\professional\\Coding Bootcamp\\Final-Project\\00-final-app\\client\\src\\pages\\Vote.js",["67","68","69"],"import { useQuery, useMutation } from '@apollo/client';\nimport { useHistory, useParams, Link } from 'react-router-dom';\nimport { UPDATE_MATCHUP } from '../utils/mutations';\nimport { CREATE_VOTE } from '../utils/mutations';\nimport { QUERY_MATCHUPS, QUERY_ME } from '../utils/queries';\nimport Auth from '../utils/auth';\n\nconst Vote = () => {\n  let { id } = useParams();\n\n  let { userid } = Auth.getUser().data._id;\n  \nconsole.log(userid)\n\n  let history = useHistory();\n\n  // const { loading, data } = useQuery(QUERY_MATCHUPS, {\n  //   variables: { _id: id },\n  // });\n\n  const QueryMultiple = () => {\n    const res1 =  useQuery(QUERY_MATCHUPS, {\n      variables: { _id: id },\n      fetchPolicy: \"no-cache\"\n    });\n     const res3 =  useQuery(QUERY_ME, {\n      fetchPolicy: \"no-cache\"\n    });     \n    return [res1, res3];\n  }\n\n  const [\n    { loading: loading, data: data1 },\n    { loading: loading3, data: data3 }\n] = QueryMultiple()\n\n  const matchup = data1?.matchups || [];\n  const profile = data3?.me|| {};\n\n  userid = profile._id\n\n  const [createVote, { error }] = useMutation(CREATE_VOTE);\n  const [updateMatchup, { error2 }] = useMutation(UPDATE_MATCHUP);\n\n  const handleVote = async () => {\n    try {\n      await createVote({\n        variables: { userid: userid, matchupid: id, voteno: 1 },\n      });\n       await updateMatchup({\n         variables: { _id: id, teamNum: 1 },\n       });      \n\n\n      history.push(`/home/`);\n\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"card bg-white card-rounded w-50\">\n      <div className=\"card-header bg-dark text-center\">\n        <h1>Bet on your grand final match</h1>\n      </div>\n      {loading ? (\n        <div>Loading...</div>\n      ) : (\n        <div className=\"card-body text-center mt-3\">\n          <h2>\n            {matchup[0].team1} vs. {matchup[0].team2}\n          </h2>\n          {/* <h3>\n            {matchup[0].team1_votes} : {matchup[0].team2_votes}\n          </h3> */}\n          {/* <button className=\"btn btn-info\" onClick={() => handleVote(1)}>\n            Vote for {matchup[0].team1}\n          </button>{' '}\n          <button className=\"btn btn-info\" onClick={() => handleVote(2)}>\n            Vote for {matchup[0].team2}\n          </button> */}\n          <button className=\"btn btn-info\" onClick={() => handleVote()}>\n            Bet on {matchup[0].team1} vs. {matchup[0].team2}\n          </button>{' '}\n          <div className=\"card-footer text-center m-3\">\n            <br></br>\n            <Link to={{ pathname: `/home/` }}>\n              <button className=\"btn btn-lg btn-danger\">\n                View all Games\n              </button>\n            </Link>\n          </div>\n        </div>\n      )}\n      {error && <div>Something went wrong...</div>}\n    </div>\n  );\n};\n\nexport default Vote;\n","C:\\Users\\Christopher.Balanzat\\OneDrive\\Self D\\professional\\Coding Bootcamp\\Final-Project\\00-final-app\\client\\src\\utils\\auth.js",[],"C:\\Users\\Christopher.Balanzat\\OneDrive\\Self D\\professional\\Coding Bootcamp\\Final-Project\\00-final-app\\client\\src\\utils\\mutations.js",[],"C:\\Users\\Christopher.Balanzat\\OneDrive\\Self D\\professional\\Coding Bootcamp\\Final-Project\\00-final-app\\client\\src\\utils\\queries.js",[],"C:\\Users\\Christopher.Balanzat\\OneDrive\\Self D\\professional\\Coding Bootcamp\\Final-Project\\00-final-app\\client\\src\\components\\MatchList\\index.js",["70","71","72"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useQuery } from '@apollo/client';\r\nimport { QUERY_MATCHUPS,QUERY_USER_VOTES } from '../../utils/queries';\r\n\r\nconst MatchList = ({ userid }) => {\r\n\r\n    const QueryMultiple = () => {\r\n        const res1 =  useQuery(QUERY_MATCHUPS, {\r\n          fetchPolicy: \"no-cache\"\r\n        });\r\n         const res3 =  useQuery(QUERY_USER_VOTES, {\r\n          variables: { userid: userid },\r\n          fetchPolicy: \"no-cache\"\r\n        });     \r\n        return [res1, res3];\r\n      }\r\n      \r\n      const [\r\n          { loading: loading, data: data1 },\r\n          { loading: loading3, data: data3 }\r\n      ] = QueryMultiple()\r\n    \r\n    const matches = data1?.matchups || [];    \r\n    const myvotes = data3?.votes || [];\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n        <div className=\"card-body m-5\">\r\n            <h2>2022 Grand final match lists:</h2>\r\n            {loading ? (\r\n            <div>Loading...</div>\r\n            ) : (\r\n            <ul className=\"square\">\r\n                {matches.map((matchup) => {\r\n                    if (myvotes.some(el => el.matchupid === matchup._id)){\r\n                        return;\r\n                    }\r\n                    return (\r\n                        <li key={matchup._id}>\r\n                        <Link to={{ pathname: `/matchup/${matchup._id}` }}>\r\n                            {matchup.team1} vs. {matchup.team2} ({(matchup.team1_votes+matchup.team2_votes)})\r\n                        </Link>\r\n                        </li>\r\n                    );                \r\n                })}\r\n            </ul>\r\n            )}\r\n        </div>\r\n        <div className=\"card-body m-5\">\r\n            {myvotes.length >0 ? (<h2>Your current match bet:</h2>) : \"\"}\r\n            {loading3 ? (\r\n            <div>Loading...</div>\r\n            ) : (      \r\n                <ul className=\"square\">\r\n                {myvotes.map((votes) => {\r\n\r\n                var matchup = matches.find(el => el._id === votes.matchupid);\r\n\r\n                return (\r\n                    <li key={matchup._id}>\r\n                        {matchup.team1} vs. {matchup.team2}\r\n                        {\" \"}({(matchup.team1_votes+matchup.team2_votes)}) \r\n                        {/* {votes.voteno==1?\" (\"+matchup.team1+\")\":\" (\"+matchup.team2+\")\"} */}\r\n                    </li>\r\n                );\r\n                })}\r\n            </ul>    \r\n            )}\r\n     </div>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default MatchList;\r\n\r\n{/* <div className=\"card-body m-5\">\r\n    <h2>2022 Grand final match lists:</h2>\r\n    {loading ? (\r\n      <div>Loading...</div>\r\n    ) : (\r\n      <ul className=\"square\">\r\n        {matches.map((matchup) => {\r\n\r\n          if (myvotes.some(el => el.matchupid === matchup._id)){\r\n            return;\r\n          }\r\n\r\n          return (\r\n            <li key={matchup._id}>\r\n              <Link to={{ pathname: `/matchup/${matchup._id}` }}>\r\n                {matchup.team1} vs. {matchup.team2} ({(matchup.team1_votes+matchup.team2_votes)})\r\n              </Link>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    )}\r\n  </div>\r\n\r\n\r\n\r\n    <div className=\"card-body m-5\">\r\n    {myvotes.length >0 ? (<h2>Your current match bet:</h2>) : \"\"}\r\n    {loading3 ? (\r\n      <div>Loading...</div>\r\n    ) : (      \r\n        <ul className=\"square\">\r\n        {myvotes.map((votes) => {\r\n\r\n        var matchup = matches.find(el => el._id === votes.matchupid);\r\n\r\n        return (\r\n            <li key={matchup._id}>\r\n                {matchup.team1} vs. {matchup.team2}\r\n                {votes.voteno==1?\" (\"+matchup.team1+\")\":\" (\"+matchup.team2+\")\"}\r\n            </li>\r\n        );\r\n        })}\r\n    </ul>    \r\n    )}\r\n     </div> */}",{"ruleId":"73","severity":1,"message":"74","line":1,"column":10,"nodeType":"75","messageId":"76","endLine":1,"endColumn":19},{"ruleId":"73","severity":1,"message":"77","line":3,"column":10,"nodeType":"75","messageId":"76","endLine":3,"endColumn":24},{"ruleId":"73","severity":1,"message":"78","line":3,"column":25,"nodeType":"75","messageId":"76","endLine":3,"endColumn":41},{"ruleId":"73","severity":1,"message":"79","line":20,"column":9,"nodeType":"75","messageId":"76","endLine":20,"endColumn":15},{"ruleId":"73","severity":1,"message":"80","line":30,"column":18,"nodeType":"75","messageId":"76","endLine":30,"endColumn":26},{"ruleId":"73","severity":1,"message":"81","line":1,"column":15,"nodeType":"75","messageId":"76","endLine":1,"endColumn":25},{"ruleId":"73","severity":1,"message":"82","line":2,"column":27,"nodeType":"75","messageId":"76","endLine":2,"endColumn":36},{"ruleId":"73","severity":1,"message":"83","line":10,"column":26,"nodeType":"75","messageId":"76","endLine":10,"endColumn":30},{"ruleId":"73","severity":1,"message":"81","line":1,"column":10,"nodeType":"75","messageId":"76","endLine":1,"endColumn":20},{"ruleId":"73","severity":1,"message":"83","line":12,"column":31,"nodeType":"75","messageId":"76","endLine":12,"endColumn":35},{"ruleId":"73","severity":1,"message":"74","line":2,"column":21,"nodeType":"75","messageId":"76","endLine":2,"endColumn":30},{"ruleId":"84","severity":1,"message":"85","line":33,"column":7,"nodeType":"86","messageId":"87","endLine":33,"endColumn":23,"fix":"88"},{"ruleId":"73","severity":1,"message":"80","line":34,"column":16,"nodeType":"75","messageId":"76","endLine":34,"endColumn":24},{"ruleId":"73","severity":1,"message":"89","line":43,"column":27,"nodeType":"75","messageId":"76","endLine":43,"endColumn":33},{"ruleId":"84","severity":1,"message":"85","line":20,"column":13,"nodeType":"86","messageId":"87","endLine":20,"endColumn":29,"fix":"90"},{"ruleId":"91","severity":1,"message":"92","line":40,"column":25,"nodeType":"93","messageId":"94","endLine":40,"endColumn":32},{"ruleId":"95","severity":1,"message":"96","line":81,"column":1,"nodeType":"97","messageId":"98","endLine":126,"endColumn":16},"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'QUERY_MATCHUPS' is defined but never used.","'QUERY_USER_VOTES' is defined but never used.","'userid' is assigned a value but never used.","'loading3' is assigned a value but never used.","'useHistory' is defined but never used.","'useEffect' is defined but never used.","'data' is assigned a value but never used.","no-useless-rename","Destructuring assignment loading unnecessarily renamed.","Property","unnecessarilyRenamed",{"range":"99","text":"100"},"'error2' is assigned a value but never used.",{"range":"101","text":"100"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",[841,857],"loading",[582,598]]